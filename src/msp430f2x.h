/************************************************************************************************
*									Header file msp430f2x.h										*
*				©2011 by closed (joint-stock) company "SENS". All rights reserved.  			*
*									Written by I.Filippov										*
************************************************************************************************/
#ifndef __msp430f2x
#define __msp430f2x

//#include <msp430x22x2.h>
#include <msp430x23x0.h>

#include "globalls.h"

#define	OSC_TIMEOUT     190         		//задержка старта LFXT1 > 50 мкс
#define	CONFSIZE        15          		//размер пакета конфигурации
#define	PASPSIZE        8           		//размер паспорта устройства
#define	HEADSIZE        1           		//размер заголовка пакета конфигурации
#define	SEG_SIZE      	64					//размер сегмента
#define	MCU_RESET     	(WDTCTL = 0x01) 	//системный сброс
#define	MASTER			UCMST				//Master Mode SPI
#define	SLAVE			0					//Slave Mode SPI
#define	MEANDER			(0xAA)

#define NSS_PORT		P4OUT		//
#define NSS_CONF		BIT0		//Px.0
#define NSS_DATA		BIT1 		//Px.1
#define IRQ_IFG			P2IFG		//
#define IRQ_IE			P2IE		//
#define IRQ_0_PIN       BIT2		//Px.2	(IRQ_0)
#define IRQ_1_PIN       BIT1		//Px.1	(IRQ_1)
#define PLL_L_PIN       BIT0		//Px.0	(IRQ_PLL)

/*-----------------------------------------------------------------------------------------------
Инициализация микроконтроллера
параметры: void
возвращает: void */
void InitMCU(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Инициализация порта P1
параметры: void
возвращает: void */
void InitPort1(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Инициализация порта P2
параметры: void
возвращает: void */
void InitPort2(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Инициализация порта P3
параметры: void
возвращает: void */
void InitPort3(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Инициализация порта P4
параметры: void
возвращает: void */
void InitPort4(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Настройка портов
параметры: void
возвращает: void */
void SetupPorts(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Инициализация таймера А
параметры: void
возвращает: void */
void InitTimerA(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Инициализация таймера B
параметры: void
возвращает: void */
void InitTimerB(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Функция задержки (использует таймер TA_B)
параметры: ms - время задержки (в милисекундах)
возвращает: void */
//void Delay(uInt16 ms);

/*-----------------------------------------------------------------------------------------------
Переводит USCIA0 в режим SPI
параметры: 1 - режим (ведущий/ведомый)
           2 - скорость (SMCLK/ClkDiv)
возвращает: void */
void USCIA0_ToSpiMode(uint8_t Mode, uint8_t ClkDiv);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Переводит USCIB0 в режим SPI
параметры: 1 - режим (ведущий/ведомый)
           2 - скорость (SMCLK/ClkDiv)
возвращает: void */
void USCIB0_ToSpiMode(uint8_t Mode, uint8_t ClkDiv);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Переводит USCIB0 в режим UART
параметры: void
возвращает: void */
void USCIA0_ToUartMode(void);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Запись/считывание байта в/из модуль SPI USART0
параметры: 1 - uChar байт на передачу
возвращает: uChar считанный байт */
uint8_t SPI_A0_ReedWrite(uint8_t SndByte);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Запись/считывание байта в/из модуль SPI USART1
параметры: 1 - uChar байт на передачу
возвращает: uChar считанный байт */
uint8_t SPI_B0_ReedWrite(uint8_t SndByte);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Передача данных по SPI
параметры: 1 - номер USART
           2 - адрес массива данных
           3 - размер массива, байт
возвращает: void */
void SendMassBySpi(uint8_t UsartNumber, uint8_t* mass, uint16_t nbyte);
//-----------------------------------------------------------------------------------------------

/*-----------------------------------------------------------------------------------------------
Delay
параметры: 1 - задержка в миллисекундах
возвращает: void */
void Delay(uint16_t cntVal);
/*---------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------
Wait
параметры: 1 - задержка в микросекундах
возвращает: void */
void Wait_us(uint16_t value);
/*---------------------------------------------------------------------------------------------*/

void StartCCR1Timeout(uint16_t offset);
void StartCCR2Timeout(uint16_t offset);
void StopCCR1Timeout(void);
void StopCCR2Timeout(void);
void SendViaUart(uint8_t value);
void SendArrayViaUart(uint8_t *arr, uint16_t len);
#endif /* msp430f2x.h */
/* eof */
